FROM ghcr.io/graalvm/native-image:ol8-java11-22.2.0 AS build
COPY hello_svc.jar build/
COPY jni-config.json build/
COPY proxy-config.json build/
COPY reflect-config.json build/
COPY resource-config.json build/
COPY serialization-config.json build/

RUN microdnf --nodocs install tar gzip make && microdnf clean all && rm -rf /var/cache/yum

# RUN ls /usr/lib/gcc/

# RUN ls /usr/lib/gcc/x86_64-redhat-linux/


# RUN ls /usr/lib/gcc/x86_64-redhat-linux/8/


# ARG RESULT_LIB="/staticlibs"

# RUN mkdir ${RESULT_LIB} && \
#     curl -L -o musl.tar.gz https://musl.libc.org/releases/musl-1.2.1.tar.gz && \
#     mkdir musl &&  ls && tar -xvzf musl.tar.gz -C musl --strip-components 1 && echo "hello" && cd musl && \
#     ./configure --disable-shared --prefix=${RESULT_LIB} && \
#     make && make install && \
#     cd / && rm -rf /muscl && rm -f /musl.tar.gz && \
#     cp /usr/lib/gcc/x86_64-redhat-linux/8/libstdc++.a ${RESULT_LIB}/lib/

# ENV PATH="$PATH:${RESULT_LIB}/bin"
# ENV CC="musl-gcc"

# RUN curl -L -o zlib.tar.gz https://zlib.net/zlib-1.2.12.tar.gz && \
#    mkdir zlib && tar -xvf zlib.tar.gz -C zlib --strip-components 1 && cd zlib && \
#    ./configure --static --prefix=${RESULT_LIB} && \
#     make && make install && \
#     cd / && rm -rf /zlib && rm -f /zlib.tar.gz





ARG RESULT_LIB="/staticlibs"

RUN mkdir ${RESULT_LIB} && \
    curl -L -o x86_64-linux-musl-native.tgz  http://more.musl.cc/10/x86_64-linux-musl/x86_64-linux-musl-native.tgz && \
    tar -xvzf x86_64-linux-musl-native.tgz --strip-components 1

ARG TOOLCHAIN_DIR="/staticlibs/x86_64-linux-musl-native"

ENV CC="/staticlibs/x86_64-linux-musl-native/bin/gcc"

# RUN cd staticlibs/musl/bin && ./configure --static --prefix="/staticlibs/musl"
# RUN  make 
# RUN make install

RUN ls

# RUN  rm -f x86_64-linux-musl-native.tgz && check
    # cp /usr/lib/gcc/x86_64-redhat-linux/8/libstdc++.a /staticlibs/x86_64-linux-musl-native/lib/

ENV PATH="$PATH:/staticlibs/x86_64-linux-musl-native/bin"
# ENV CC="musl-gcc"

RUN curl -L -o zlib.tar.gz https://zlib.net/zlib-1.2.12.tar.gz && \
   mkdir zlib && tar -xvf zlib.tar.gz -C zlib --strip-components 1 && cd zlib && \
   ./configure --prefix="/staticlibs/x86_64-linux-musl-native" --static  && \
    make && make install && \
    cd / && rm -rf /zlib && rm -f /zlib.tar.gz


RUN cd build && native-image -jar hello_svc.jar \
 --static --libc=musl \
 --no-fallback \
 --enable-url-protocols=http,https \
 --initialize-at-build-time=org.slf4j \
 --initialize-at-run-time=io.netty.handler.ssl.BouncyCastleAlpnSslUtils \
 --initialize-at-run-time=io.netty.handler.codec.http2 \
 --initialize-at-run-time=io.netty.handler.codec.compression.ZstdOptions \
 --initialize-at-run-time=io.netty.handler.ssl.OpenSsl \
 --initialize-at-run-time=io.netty.handler.ssl.OpenSslPrivateKeyMethod \
 --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslEngine  \
 --initialize-at-run-time=io.netty.internal.tcnative \
 --initialize-at-run-time=io.netty.handler.ssl.OpenSslAsyncPrivateKeyMethod \
 -H:ResourceConfigurationFiles=resource-config.json \
 -H:ReflectionConfigurationFiles=reflect-config.json\
 -H:JNIConfigurationFiles=jni-config.json \
 -H:DynamicProxyConfigurationFiles=proxy-config.json \
 -H:SerializationConfigurationFiles=serialization-config.json \
 -H:MaxDuplicationFactor=25.0 \
 -H:Name=output

FROM alpine

# ENV GLIBC_VERSION=2.27-r0 

# RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \
#     &&  wget "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-$GLIBC_VERSION.apk" \
#     &&  apk --no-cache add "glibc-$GLIBC_VERSION.apk" \
#     &&  rm "glibc-$GLIBC_VERSION.apk" \
#     &&  wget "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-bin-$GLIBC_VERSION.apk" \
#     &&  apk --no-cache add "glibc-bin-$GLIBC_VERSION.apk" \
#     &&  rm "glibc-bin-$GLIBC_VERSION.apk" 
#     # &&  wget "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-i18n-$GLIBC_VERSION.apk" \
#     # &&  apk --no-cache add "glibc-i18n-$GLIBC_VERSION.apk" \
#     # &&  rm "glibc-i18n-$GLIBC_VERSION.apk"

COPY --from=build /app/build/output /

EXPOSE 9090

CMD ["/output"]
 